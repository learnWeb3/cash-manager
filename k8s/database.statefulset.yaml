# AZURE PRODUCTION STORAGE CLASS
# apiVersion: storage.k8s.io/v1
# kind: StorageClass
# metadata:
#   name: azure-storage
# provisioner: file.csi.azure.com
# allowVolumeExpansion: true
# parameters:
#   protocol: nfs
# mountOptions:
#   - nconnect=8
---
# DATABASE ENV (BASE64)
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: database-secrets
data:
   # cashmanager
  mongo_username: "Y2FzaG1hbmFnZXI="
  # fc999d9d
  mongo_password: "ZmM5OTlkOWQ=" 
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: database-configmap
data:
  mongo_database: "cashmanager"
---
# STATEFULSET
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  labels:
    tier: database
spec:
  serviceName: mongo
  replicas: 1
  template:
    metadata:
      labels:
        tier: database
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: mongo
          image: mongo
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: mongo_username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: mongo_password
            - name: MONGO_INITDB_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: database-configmap
                  key: mongo_database
          # volumeMounts:
          #   - name: persistent-storage
          #     mountPath: /data/db
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      tier: database
  # volumeClaimTemplates:
  #   - metadata:
  #       name: persistent-storage
  #       annotations:
  #         volume.beta.kubernetes.io/storage-class: azure-storage
  #     spec:
  #       accessModes: ["ReadWriteMany"]
  #       resources:
  #         requests:
  #           storage: 10Gi
---
# INTERNAL SERVICES forward traffic to database on port 27017 using mongo hostname internally
apiVersion: v1
kind: Service
metadata:
  name: mongo
spec:
  selector:
    tier: database
  type: ClusterIP
  ports:
    - port: 27017
      targetPort: 27017
---

